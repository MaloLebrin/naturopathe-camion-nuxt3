// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @default(autoincrement()) @id
  email String  @unique
  firstName String?
  lastName String?
  name  String?
  salt String
  password String
  token String @unique
  articles Article[]
  comments Comment[]
  files File[]
  Role String
}

model Article {
  id        Int     @default(autoincrement()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  publishedAt DateTime?  @default(now())
  title     String
  content   String?
  description String?
  instaUrl String?
  facebookUrl String?
  published Boolean @default(false)
  isInstaPost Boolean @default(false)
  author    User?   @relation(fields: [authorId], references: [id])
  authorId  Int?
  files File[]
  category    Category?   @relation(fields: [categoryId], references: [id])
  categoryId  Int?
  comments Comment[]
}

model File {
  id    Int     @default(autoincrement()) @id
  name  String?
  idx Int @default(0)
  secure_url String
  public_id String
  url String
  user    User?   @relation(fields: [userId], references: [id])
  userId  Int?
  article    Article?   @relation(fields: [articleId], references: [id])
  articleId  Int?
  
}

model Category {
  id    Int     @default(autoincrement()) @id
  name  String
  color String?
  articles Article[]
}

model Comment {
  id    Int     @default(autoincrement()) @id
  createdAt DateTime  @default(now())
  updatedAt DateTime  @default(now())
  creator User?   @relation(fields: [creatorId], references: [id])
  authorName String?
  content String
  creatorId Int?
  article    Article?   @relation(fields: [articleId], references: [id])
  articleId  Int?
}
